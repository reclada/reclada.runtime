# Use python:3.8 as a custom image

RUN \
  groupadd -g 12574 ubuntu && \
  useradd -u 12574 -g 12574 -m -N -s /bin/bash ubuntu

RUN apt-get update && apt-get install awscli postgresql-client -y

RUN apt-get install apt-transport-https && \
    echo "deb https://notesalexp.org/tesseract-ocr/buster/ buster main" >> /etc/apt/sources.list && \
    wget -O - https://notesalexp.org/debian/alexp_key.asc | apt-key add -

RUN apt-get update && \
    apt-get install --yes locales build-essential libpoppler-cpp-dev python3-dev \
    python3-distutils poppler-utils libpoppler-qt5-1 poppler-data libleptonica-dev \
    libtesseract-dev tesseract-ocr pkg-config cmake wget curl \
    default-jre libreoffice-java-common && rm -rf /var/lib/apt/lists/*

RUN echo "LC_ALL=en_US.UTF-8" >> /etc/environment && \
    echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen && \
    echo "LANG=en_US.UTF-8" > /etc/locale.conf && \
    locale-gen en_US.UTF-8

RUN wget https://downloadarchive.documentfoundation.org/libreoffice/old/6.4.6.2/deb/x86_64/LibreOffice_6.4.6.2_Linux_x86-64_deb.tar.gz && \
    tar -xzvf LibreOffice_6.4.6.2_Linux_x86-64_deb.tar.gz && \
    cd LibreOffice_6.4.6.2_Linux_x86-64_deb/DEBS && \
    dpkg -i *.deb && \
    cd ../../

RUN pip install poetry

RUN mkdir mmcv && wget -P mmcv https://download.openmmlab.com/mmcv/dist/1.2.1/torch1.7.0/cpu/mmcv_full-1.2.1%2Btorch1.7.0%2Bcpu-cp38-cp38-manylinux1_x86_64.whl

RUN wget https://raw.githubusercontent.com/badgerdoc/badgerdoc/master/poetry.lock
RUN wget https://raw.githubusercontent.com/badgerdoc/badgerdoc/master/pyproject.toml
RUN wget https://raw.githubusercontent.com/badgerdoc/badgerdoc/master/poetry.lock

RUN poetry config virtualenvs.create false && \
    poetry add mmcv/mmcv_full-1.2.1+torch1.7.0+cpu-cp38-cp38-manylinux1_x86_64.whl \
    && poetry install --no-interaction \
    && rm -rf poetry.lock pyproject.toml poetry.lock mmcv/

RUN pip install 'git+https://github.com/open-mmlab/mmdetection.git@v2.7.0'

RUN python -m nltk.downloader -d /usr/share/nltk_data stopwords words punkt wordnet

RUN mkdir /models && \
    gdown "https://drive.google.com/uc?id=1YmO5O8kBPI9XZWASTWqP1Qh4skqQu7US" -O /models/3_cls_w18_e30.pth && \
    wget --output-document /models/ch_ppocr_mobile_v2.0_det_infer.tar https://paddleocr.bj.bcebos.com/dygraph_v2.0/ch/ch_ppocr_mobile_v2.0_det_infer.tar && \
    tar xf /models/ch_ppocr_mobile_v2.0_det_infer.tar -C /models && \
    rm -rf /models/ch_ppocr_mobile_v2.0_det_infer.tar && \
    wget --output-document /models/ch_ppocr_server_v2.0_det_infer.tar https://paddleocr.bj.bcebos.com/dygraph_v2.0/ch/ch_ppocr_server_v2.0_det_infer.tar && \
    tar xf /models/ch_ppocr_server_v2.0_det_infer.tar -C /models && \
    rm -rf /models/ch_ppocr_server_v2.0_det_infer.tar && \
    wget --output-document /models/ch_ppocr_mobile_v2.0_cls_infer.tar https://paddleocr.bj.bcebos.com/dygraph_v2.0/ch/ch_ppocr_mobile_v2.0_cls_infer.tar && \
    tar xf /models/ch_ppocr_mobile_v2.0_cls_infer.tar -C /models && \
    rm -rf /models/ch_ppocr_mobile_v2.0_cls_infer.tar

RUN pip install 'git+https://github.com/reclada/SciNLP.git#egg=bd2reclada&subdirectory=src/srv/bd2reclada'

ENV LIBRE_RUN="libreoffice6.4"
ENV CASCADE_MODEL_PATH="/models/3_cls_w18_e30.pth"
ENV PADDLE_MODEL_DIR="/models/ch_ppocr_server_v2.0_det_infer"
ENV PADDLE_MODEL_CLS="/models/ch_ppocr_server_v2.0_cls_infer"

ENV PYTHONUNBUFFERED=1
ENV PYTHONPATH="${PYTHONPATH}:/table-extractor"

RUN pip install -r https://raw.githubusercontent.com/reclada/reclada.runtime/main/srv/requirements.txt
